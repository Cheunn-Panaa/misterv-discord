############################
# STEP 1 build executable binary
############################
# Compile stage
FROM golang:alpine AS builder

RUN apk update && apk add --no-cache git

WORKDIR $GOPATH
RUN echo $GOPATH
COPY . .

# Fetch dependencies.
RUN go get -d -v

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
      -ldflags='-w -s -extldflags "-static"' -a \
      -o /go/bin/app .

############################
# STEP 2 build a small image
############################
FROM alpine:3.8
# Copy our static executable
COPY --from=builder /go/bin/app /go/bin/app
RUN set -x \
 && apk add --no-cache ca-certificates curl python gnupg ffmpeg  \
  # Install youtube-dl
 && curl -Lo /usr/local/bin/youtube-dl https://yt-dl.org/downloads/latest/youtube-dl \
 && chmod a+rx /usr/local/bin/youtube-dl

# Run the app
ENTRYPOINT ["/go/bin/app"]
